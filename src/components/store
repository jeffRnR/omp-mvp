 return (
    <Flex
      border="1px solid"
      bg="white"
      borderColor="gray.200"
      borderRadius={10}
      _hover={{ borderColor: 'gray.500' }}
      cursor="pointer"
      /*onClick={() => onSelectPost && onSelectPost(post)}*/
      
    >
      
      <Flex direction="column" width="100%" >
        <Stack spacing={1} p="10px">
          <Stack direction="row" align="center" fontSize="9pt">
            {/* Home page check */}
            {homePage && (
              <>
                {post.businessImageURL ? (
                  <Image 
                    src={post.businessImageURL} 
                    borderRadius='full'
                    boxSize='24px'
                    mr={2}
                  />
                ) : (
                  <Icon as={FaSmile} fontSize='18pt' mr={1} color='blue.500'> </Icon>
                )}
                <Link href={`/businesses/${post.businessId}`}>
                  <Text 
                    fontWeight={700} 
                    _hover={{ textDecoration:'underline'}}
                    onClick={event => event.stopPropagation()}
                  >{`${post.businessId}`}</Text>
                </Link>
                <Icon as={BsDot} m={-1} color='gray.500' fontSize={8}/>
              </>
            )}
            <Text>Posted by</Text>
            <Text fontWeight={600}> {creatorDisplayName}</Text>
            <Text>{"      "}</Text>
            <Text fontStyle="italic">{formattedDate}</Text>
          </Stack>
          <Text fontSize="12pt" fontWeight={600}>
            {title}
          </Text>
          <Text fontSize="10pt">{body}</Text>
          {imageURLs && imageURLs.length > 0 && (
            <Flex justify="center" align="center" p={2} direction='column'>
              {loadingImage && (
                <Skeleton height='200px' width='100%' borderRadius={4} />
              )}
              <Carousel
                selectedItem={currentImageIndex}
                onChange={handleImageChange}
                showArrows={true}
                showThumbs={false}
                showStatus={false}
                infiniteLoop={true}
              >
                {imageURLs.map((imageURL, index) => (
                  <div key={index}>
                    <Image
                      src={imageURL}
                      maxHeight="460px"
                      alt={`Post Image ${index + 1}`}
                      display={loadingImage ? 'none' : 'unset'}
                      onLoad={() => setLoadingImage(false)}
                    />
                  </div>
                ))}
              </Carousel>
              <Text fontSize="10pt" mt={2}>{`${currentImageIndex + 1}/${imageURLs.length}`}</Text>
            </Flex>
          )}
          <Stack direction="row" spacing={5}>
            <Text fontSize="11pt" fontWeight={600}>Ksh {price}</Text>
            {distance !== null && (
              <Text fontSize="11pt" fontWeight={600} ml={6}>
                {distance}m away
              </Text>
            )}
          </Stack>
        </Stack>
        <Flex ml={1} mb={0.5} color={'gray.500'} direction='row'>
          <Flex
            align="center"
            p="8px 10px"
            borderRadius={4}
            _hover={{ bg: 'gray.300' }}
            cursor="pointer"
          >
            <Icon as={BsChat} mr={2} />
            <Text fontSize="9pt">{numberOfComments}</Text>
          </Flex>
          <Flex
            align="center"
            p="8px 10px"
            borderRadius={4}
            _hover={{ bg: 'gray.300' }}
            cursor="pointer"
          >
            <Icon as={IoArrowRedoOutline} mr={2} />
            <Text fontSize="9pt">share</Text>
          </Flex>
          {!userIsCreator && (
            <Flex
              align="center"
              p="8px 10px"
              borderRadius={4}
              _hover={{ bg: 'gray.300' }}
              cursor="pointer"
              onClick={() => setCartVisibility(true)}
            >
              <Icon as={HiOutlineShoppingBag} mr={2} />
              <Text fontSize="9pt">Place order</Text>
            </Flex>
          )}
          {userIsCreator && (
            <Flex
              align="center"
              p="8px 10px"
              borderRadius={4}
              _hover={{ bg: 'gray.300' }}
              cursor="pointer"
              onClick={handleDelete}
            >
              <Icon as={AiOutlineDelete} mr={2} />
              <Text fontSize="9pt">Delete</Text>
            </Flex>
          )}
        </Flex>
      </Flex>
    </Flex>
  )